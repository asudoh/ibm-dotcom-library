/**
 * @license
 *
 * Copyright IBM Corp. 2020, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { html, property, customElement } from 'lit-element';
import settings from 'carbon-components/es/globals/js/settings';
import PlayOutline20 from 'carbon-web-components/es/icons/play--outline/20.js';
import ddsSettings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings';
import {
  formatVideoCaption,
  formatVideoDuration,
} from '@carbon/ibmdotcom-utilities/es/utilities/formatVideoCaption/formatVideoCaption.js';
import DDSCardFooter from '../card/card-footer';
import styles from './video-player.scss';

const { prefix } = settings;
const { stablePrefix: ddsPrefix } = ddsSettings;

/**
 * The footer for card-based video player launcher.
 *
 * @element dds-video-player-launcher-card-footer
 */
@customElement(`${ddsPrefix}-video-player-launcher-card-footer`)
class DDSVideoPlayerLauncherCardFooter extends DDSCardFooter {
  protected _renderContent() {
    const { _hasCopy: hasCopy } = this;
    const { duration, formatVideoCaption: formatVideoCaptionInEffect, formatVideoDuration: formatVideoDurationInEffect } = this;
    const caption = hasCopy
      ? undefined
      : formatVideoCaptionInEffect({
          duration: formatVideoDurationInEffect({ duration: !duration ? duration : duration * 1000 }),
        });
    return html`
      <span class="${prefix}--card__cta__copy"><slot @slotchange="${this._handleSlotChange}"></slot>${caption}</span>
    `;
  }

  /**
   * @returns The template for the icon.
   */
  // eslint-disable-next-line class-methods-use-this
  _renderIcon() {
    return html`
      <slot name="icon">${PlayOutline20({ class: `${prefix}--card__cta ${ddsPrefix}-ce--cta__icon` })}</slot>
    `;
  }

  /**
   * The formatter for the video caption, composed with the video name and the video duration.
   * Should be changed upon the locale the UI is rendered with.
   */
  @property({ attribute: false })
  formatVideoCaption = formatVideoCaption;

  /**
   * The formatter for the video duration.
   * Should be changed upon the locale the UI is rendered with.
   */
  @property({ attribute: false })
  formatVideoDuration = formatVideoDuration;

  /**
   * The video duration.
   */
  @property({ type: Number })
  duration?: number;

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSVideoPlayerLauncherCardFooter;
